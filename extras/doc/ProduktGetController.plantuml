' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.
@startuml ProduktGetController

skinparam classAttributeIconSize 0

package org.springframework {
    package web.bind.annotation {
        interface "@RestController" as RestController
        interface "@RequestMapping" as RequestMapping
        interface "@PathVariable" as PathVariable
        interface "@RequestParam" as RequestParam
        interface "@ExceptionHandler" as ExceptionHandler
        interface "@ResponseStatus" as ResponseStatus
        interface "@GetMapping" as GetMapping
    }

    package http {
        class ResponseEntity<T>
    }
    package hateoas {
        class CollectionModel<E>
    }

    ResponseEntity .up[hidden].> CollectionModel
}

package jakarta.servlet.http {
    interface HttpServletRequest
}

package java.util {
    interface Map<K,V>
    class UUID
    UUID .up[hidden].> HttpServletRequest
}

package com.acme.produkt {
    package entity {
        class Produkt << entity >>
    }

    package service {
        class ProduktReadService << control >> << @Service >>
        class NotFoundException

        ProduktReadService .right[hidden].> NotFoundException
    }

    package rest #DDDDDD {
        class ProduktModel <<entity>>

        class ProduktGetController << boundary >> << @RestController >> << @RequestMapping >> {
            + @GetMapping findById(@PathVariable id: UUID, @RequestHeader("If-None-Match") version: String, request: HttpServletRequest): ResponseEntity<ProduktModel>
            + @GetMapping find(@RequestParam suchkriterien: Map<String, String>, request: HttpServletRequest): ResponseEntity<ProduktModel>
            + @GetMapping findbyNamenPrefix(@PathVariable prefix: String): String
            + @ExceptionHandler onNotFound(ex: NotFoundException): void
        }

        ProduktGetController o-right-> "1" ProduktReadService : service
        ProduktGetController ..> ProduktModel
        ProduktGetController ..> Produkt
        ProduktGetController ..> NotFoundException

        ProduktGetController .down.> HttpServletRequest
        ProduktGetController .up.> RequestMapping
        ProduktGetController .up.> RestController
        ProduktGetController .up.> CollectionModel
        ProduktGetController .up.> ResponseEntity
        ProduktGetController .up.> PathVariable
        ProduktGetController .up.> RequestParam
        ProduktGetController .up.> ResponseStatus
        ProduktGetController .up.> ExceptionHandler
        ProduktGetController .up.> GetMapping

        ProduktGetController .down.> UUID
        ProduktGetController .down.> Map

        ProduktModel .[hidden].> ProduktReadService
        ProduktModel ..> Produkt
        ProduktModel .[hidden].> Produkt
    }
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
